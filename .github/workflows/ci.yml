name: CI/CD

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: choice
        required: true
        default: 'production'
        options:
        - production
        - staging
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libncurses5-dev xclip
          python -m pip install --upgrade pip
          pip install -e ".[test]"
          pip install build pytest-cov pylint flake8 mypy

      - name: Run tests
        run: pytest -v --junitxml=report.xml

      - name: Run coverage
        run: |
          pytest --cov=seedshield --cov-report term-missing --cov-report xml:coverage.xml
          coverage report --fail-under=85

      - name: Quality checks
        run: |
          pylint seedshield || exit $(( $? & 35 ))
          flake8 seedshield
          mypy seedshield

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high

  security-scan:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - uses: actions/checkout@v4

      # Build temporary image for security scanning
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build for security scan
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: seedshield:scan
          push: false

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'seedshield:scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      # Additional security checks can be added here
      - name: Run container security checks
        run: |
          # Add additional security tools/checks here
          echo "Running additional security checks..."

  release:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/exec
          npm install -g @semantic-release/git
          npm install -g @semantic-release/changelog

      - name: Check and create initial tag
        run: |
          if [ -z "$(git tag)" ]; then
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git tag -a v0.1.0 -m "Initial release"
            git push origin v0.1.0
          fi

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: npx semantic-release

  build-package:
    needs: [release, security-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  build-docker:
    needs: [release, security-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version from pyproject.toml
        run: |
          VERSION=$(grep -m1 "version = " pyproject.toml | sed 's/version = //g' | tr -d '"' | tr -d "'")
          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/seedshield:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/seedshield:${{ github.ref_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/seedshield:${{ env.PACKAGE_VERSION }}

  vulnerabilities-notification:
    needs: [security-scan]
    runs-on: ubuntu-latest
    if: failure() && (github.event_name == 'schedule' || github.event_name == 'push')
    steps:
      - name: Create Issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Security Vulnerabilities Found',
              body: 'Security vulnerabilities were found during the scan. Please check the latest workflow run for details.',
              labels: ['security', 'vulnerability']
            })
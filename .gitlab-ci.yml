image: python:3.12-slim

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

stages:
  - test
  - quality
  - build
  - docker

cache:
  paths:
    - .pip-cache/
    - .pytest_cache/
    - .coverage

before_script:
  - apt-get update && apt-get install -y --no-install-recommends libncurses5-dev xclip
  - python -m pip install --upgrade pip
  - pip install -e ".[test]"
  - pip install build pytest-cov pylint flake8 mypy

test:pytest:
  stage: test
  script:
    - pytest -v --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

test:coverage:
  stage: test
  script:
    - pytest --cov=seedshield --cov-report term-missing --cov-report xml:coverage.xml
    - coverage report --fail-under=85
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

quality:lint:
  stage: quality
  script:
    - pylint seedshield || exit $(( $? & 35 ))  # Only fail on errors
    - flake8 seedshield
    - mypy seedshield

build:package:
  stage: build
  script:
    - python -m build
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz

build:docker:
  stage: docker
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker info
  script:
    - chmod +x build.sh
    - sh build.sh
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_TAG

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_TAG